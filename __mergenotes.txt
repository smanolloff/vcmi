===================================
=== this change I could merge in 1.5.1
    It seems VCMI introduced the concept of has "server runners", maybe the change should go there:
        if (settings["server"]["useProcess"].Bool())
            serverRunner.reset(new ServerProcessRunner());
        else
            serverRunner.reset(new ServerThreadRunner());

=== DIFF:

@@ -188,7 +190,8 @@ void CServerHandler::startLocalServerAndConnect()
        threadRunLocalServer->join();

    th->update();
-
+
+#ifndef SINGLE_PROCESS_APP
    auto errorMsg = CGI->generaltexth->translate("vcmi.server.errors.existingProcess");
    try
    {
@@ -201,7 +204,8 @@ void CServerHandler::startLocalServerAndConnect()
    {
        //no connection means that port is not busy and we can start local server
    }
-
+#endif
+

*************** fix:

it seems port no longer needs to be hardcoded to 0, as it's now read from settings:

ui16 CServerHandler::getLocalPort() const
{
    return settings["server"]["localPort"].Integer();
}

Also, there is also:

    settings["server"]["useProcess"]

..which i would want false (thread should be faster?)



===================================
=== this change I could not merge in 1.5.1
    Maybe this is in the server runner now?

@@ -212,9 +216,22 @@ void CServerHandler::startLocalServerAndConnect()
        args.push_back("--lobby-port=" + std::to_string(settings["session"]["port"].Integer()));
        args.push_back("--lobby-uuid=" + settings["session"]["hostUuid"].String());
    }
-   threadRunLocalServer = std::make_shared<boost::thread>([&cond, args, this] {
+   ui16 srvport = 0;
+
+   args.push_back("--max-battles=" + std::to_string(settings["server"]["maxBattles"].Integer()));
+   args.push_back("--random-heroes=" + std::to_string(settings["server"]["randomHeroes"].Integer()));
+   args.push_back("--random-obstacles=" + std::to_string(settings["server"]["randomObstacles"].Intege>
+   args.push_back("--swap-sides=" + std::to_string(settings["server"]["swapSides"].Integer()));
+   args.push_back("--stats-mode=" + settings["server"]["statsMode"].String());
+   args.push_back("--stats-storage=" + settings["server"]["statsStorage"].String());
+   args.push_back("--stats-loglevel=" + settings["server"]["statsLoglevel"].String());
+   args.push_back("--stats-persist-freq=" + std::to_string(settings["server"]["statsPersistFreq"].Int>
+   args.push_back("--stats-sampling=" + std::to_string(settings["server"]["statsSampling"].Integer())>
+   args.push_back("--stats-score-var=" + std::to_string(settings["server"]["statsScoreVar"].Float()));
+
+   threadRunLocalServer = std::make_shared<boost::thread>([&cond, &srvport, args, this] {
        setThreadName("CVCMIServer");
-       CVCMIServer::create(&cond, args);
+       CVCMIServer::create(&cond, &srvport, args);
        onServerFinished();
    });

@@ -268,7 +285,11 @@ void CServerHandler::startLocalServerAndConnect()
    th->update(); //put breakpoint here to attach to server before it does something stupid

*************** fix:

these args will now be passed via StartInfo (`si` member in CVCMIServer)

===================================
=== this change I merged in 1.5.1
    HOWEVER, it requires another change in CPlayerInterface.cpp that
    I did NOT merge before -- the prepareAutoFightingAI function
    (as now it gets called)

+++ b/client/battle/BattleWindow.cpp
@@ -503,15 +503,10 @@ void BattleWindow::bAutofightf()

+       owner.curInt->prepareAutoFightingAI(owner.army1, owner.army2, int3(0,0,0), owner.attackingHero>

*************** fix:
added the function

===============================
=== a i had commented-out lot of logGlobal->debug statements in
    client/gui/InterfaceObjectConfigurable.cpp
    was hard during merge, but maybe i should comment them out again?

===================================
=== this change I could not merge in 1.5.1 (file is deleted)
    IMPORTANT this prevents disk writes

@@ -1200,8 +1200,8 @@ void CModHandler::afterLoad(bool onlyEssential)
--- a/lib/CModHandler.cpp
+++ b/lib/CModHandler.cpp
    if(!onlyEssential)
    {
-       FileStream file(*CResourceHandler::get()->getResourceName(ResourceID("config/modSettings.json">
-       file << modSettings.toJson();
+       // FileStream file(*CResourceHandler::get()->getResourceName(ResourceID("config/modSettings.js>
+       // file << modSettings.toJson();^M
    }

*************** fix:
commented out "file << " lines

===================================
=== this change I could not merge in 1.5.1 (file is deleted)

+++ b/lib/CondSh.h
@@ -22,6 +22,13 @@ template <typename T> struct CondSh

    CondSh(T t) : data(t) {}

+   void unset()^M
+   {^M
+       boost::unique_lock<boost::mutex> lock(mx);^M
+       delete data;^M
+       data = nullptr;^M
+   }^M
+^M

===================================
=== this change I could not merge in 1.5.1 (file is deleted)

+++ b/lib_server/CMakeLists.txt
@@ -1,3 +1,4 @@
 add_main_lib(vcmi_lib_server STATIC)
+set_target_properties(vcmi_lib_server PROPERTIES COMPILE_FLAGS "-fPIC")

===================================
=== this change I could merge in 1.5.1, but userCachePath was
    changed to usedDataPath and I changed it too

+++ b/mapeditor/mainwindow.cpp
@@ -368,7 +368,7 @@ void MainWindow::on_actionOpen_triggered()
        return;

    auto filenameSelect = QFileDialog::getOpenFileName(this, tr("Open map"),
-       QString::fromStdString(VCMIDirs::get().userCachePath().make_preferred().string()),
+       QString::fromStdString((VCMIDirs::get().userCachePath() / "Maps" / "ai").make_preferred().stri>


===================================
=== this change I could not merge in 1.5.1
    The file is huge, the 1.5.1 changes were too much
    sublime merge was slow to respond
    => merge manually based on clean diff (from vcmi-gym's VCMI dir)

$ gd 1.3.2 server/CGameHandler.cpp

*************** fix:
amended BattleResultProcessor, BattleProcessor, CGameHandler

XXX: it seems battleQuery is reused on battle replay, so maybe this change
    is no longer needed:

+       if (lastBattleQuery->isRecurrent) {
+           nextBattleQuery = lastBattleQuery;
+       } else {
+           nextBattleQuery = std::make_shared<CBattleQuery>(this, gs->curB);
+           nextBattleQuery->isRecurrent = true;
+       }



===================================
=== this change I could not merge in 1.5.1 (file was deleted)

+++ b/server/CQuery.cpp
@@ -194,7 +194,7 @@ void Queries::popQuery(PlayerColor player, QueryPtr query)
    query->onRemoval(player);

    //Exposure on query below happens only if removal didn't trigger any new query
-   if(nextQuery && nextQuery == topQuery(player))
+   if(nextQuery && nextQuery == topQuery(player) && !nextQuery->isRecurrent)^M


*************** fix:
XXX: did nothing - it seems battleQuery is reused on battle replay,
    so maybe this change is no longer needed

===================================
=== this change I could not merge in 1.5.1 (file was deleted)

+++ b/server/CQuery.h
@@ -41,6 +41,7 @@ class CQuery
 public:
    std::vector<PlayerColor> players; //players that are affected (often "blocked") by query
    QueryID queryID;
+   bool isRecurrent = false;^M

*************** fix:
XXX: did nothing - it seems battleQuery is reused on battle replay,
    so maybe this change is no longer needed

===================================
=== this change I could not merge in 1.5.1 (file was deleted)

    [stuff in server/CVCMIServer.cpp]
    apparently a lot has changed there and it seems cmdline options were
    removed entirely (everything is based on settings)
    there seems to be no main() there anymore
    Changes will need to be merged manually:
    * random TCP port
    * cmd line options
